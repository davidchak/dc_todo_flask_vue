# Use postgres/example user/password credentials
version: '3.1'

services:
  # web:
  #   image: nginx
  #   volumes:
  #     - ./mysite.template:/etc/nginx/conf.d/mysite.template
  #   ports:
  #     - "8080:80"
  #   environment:
  #     - NGINX_HOST=foobar.com
  #     - NGINX_PORT=80
  #   command: /bin/bash -c "envsubst < /etc/nginx/conf.d/mysite.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"

  flask:
    build: 
      context: ./flask
      dockerfile: Dockerfile.dev
    environment:
      - FLASK_APP=wsgi.py
      - FLASK_CONFIG=production
    ports:
      - "8000:8000"
    volumes:
      - './flask:/usr/src/app'
    depends_on:
      - postgres
    command: ['gunicorn', '-b 0.0.0.0:8000', 'wsgi:app']
    restart: always

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: toor
      POSTGRES_DB: flask
    ports:
      - 5432:5432
    volumes:
      - "./postgres/data:/var/lib/postgresql/data"

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080